using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RpgApi.Migrations
{
    /// <inheritdoc />
    public partial class MigracaoUmParaUm : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 234, 189, 227, 90, 144, 235, 15, 118, 192, 21, 22, 130, 103, 186, 56, 187, 76, 144, 27, 111, 230, 215, 246, 40, 102, 230, 14, 72, 54, 67, 213, 89, 9, 35, 56, 244, 100, 81, 66, 6, 250, 241, 111, 39, 239, 45, 188, 207, 107, 88, 229, 12, 96, 246, 144, 162, 200, 102, 1, 112, 235, 133, 97, 206 }, new byte[] { 49, 104, 228, 222, 63, 167, 205, 168, 227, 53, 159, 81, 12, 179, 226, 10, 99, 178, 146, 185, 63, 186, 182, 21, 117, 38, 46, 188, 251, 80, 208, 219, 3, 21, 215, 136, 58, 70, 37, 14, 223, 148, 153, 219, 71, 120, 187, 247, 248, 186, 105, 14, 81, 205, 19, 18, 26, 229, 233, 49, 63, 239, 221, 35, 110, 171, 108, 181, 203, 192, 236, 110, 35, 207, 200, 0, 123, 79, 137, 134, 15, 19, 186, 149, 71, 250, 125, 124, 169, 103, 198, 205, 11, 112, 87, 218, 35, 7, 160, 158, 188, 21, 49, 23, 67, 87, 97, 158, 44, 68, 59, 30, 23, 205, 104, 230, 21, 75, 202, 254, 23, 189, 73, 127, 75, 67, 121, 185 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 21, 250, 209, 66, 136, 12, 69, 190, 122, 116, 16, 39, 161, 89, 220, 154, 217, 96, 208, 21, 52, 69, 147, 166, 5, 126, 128, 175, 184, 144, 216, 81, 17, 93, 32, 99, 55, 140, 150, 17, 186, 248, 177, 207, 111, 218, 143, 139, 49, 133, 32, 15, 41, 194, 125, 173, 97, 91, 230, 162, 95, 129, 49, 45 }, new byte[] { 202, 82, 235, 120, 40, 214, 122, 50, 160, 110, 49, 189, 213, 24, 177, 22, 120, 45, 87, 72, 8, 161, 165, 173, 125, 227, 220, 8, 2, 165, 221, 228, 121, 78, 58, 203, 72, 169, 173, 77, 93, 131, 53, 4, 109, 89, 21, 92, 236, 16, 238, 200, 14, 103, 241, 74, 216, 206, 25, 169, 6, 193, 129, 229, 142, 193, 163, 38, 243, 182, 54, 95, 144, 19, 216, 84, 88, 13, 169, 197, 81, 65, 14, 180, 51, 164, 223, 52, 13, 72, 154, 124, 231, 90, 5, 55, 215, 210, 67, 161, 9, 235, 161, 44, 70, 107, 101, 76, 163, 83, 70, 116, 154, 0, 165, 194, 94, 196, 40, 79, 112, 76, 194, 100, 102, 185, 227, 75 } });
        }
    }
}
