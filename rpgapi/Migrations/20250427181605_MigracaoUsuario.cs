using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace RpgApi.Migrations
{
    /// <inheritdoc />
    public partial class MigracaoUsuario : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 21, 250, 209, 66, 136, 12, 69, 190, 122, 116, 16, 39, 161, 89, 220, 154, 217, 96, 208, 21, 52, 69, 147, 166, 5, 126, 128, 175, 184, 144, 216, 81, 17, 93, 32, 99, 55, 140, 150, 17, 186, 248, 177, 207, 111, 218, 143, 139, 49, 133, 32, 15, 41, 194, 125, 173, 97, 91, 230, 162, 95, 129, 49, 45 }, new byte[] { 202, 82, 235, 120, 40, 214, 122, 50, 160, 110, 49, 189, 213, 24, 177, 22, 120, 45, 87, 72, 8, 161, 165, 173, 125, 227, 220, 8, 2, 165, 221, 228, 121, 78, 58, 203, 72, 169, 173, 77, 93, 131, 53, 4, 109, 89, 21, 92, 236, 16, 238, 200, 14, 103, 241, 74, 216, 206, 25, 169, 6, 193, 129, 229, 142, 193, 163, 38, 243, 182, 54, 95, 144, 19, 216, 84, 88, 13, 169, 197, 81, 65, 14, 180, 51, 164, 223, 52, 13, 72, 154, 124, 231, 90, 5, 55, 215, 210, 67, 161, 9, 235, 161, 44, 70, 107, 101, 76, 163, 83, 70, 116, 154, 0, 165, 194, 94, 196, 40, 79, 112, 76, 194, 100, 102, 185, 227, 75 } });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "TB_USUARIOS",
                keyColumn: "Id",
                keyValue: 1,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 216, 193, 60, 10, 202, 249, 71, 210, 123, 184, 196, 96, 218, 32, 248, 9, 233, 133, 13, 160, 78, 215, 176, 168, 48, 216, 134, 249, 231, 25, 202, 10, 182, 78, 175, 177, 226, 45, 102, 25, 234, 129, 97, 2, 37, 79, 201, 194, 8, 242, 46, 77, 183, 115, 63, 147, 20, 123, 172, 227, 139, 114, 209, 107 }, new byte[] { 53, 195, 238, 197, 152, 250, 32, 91, 127, 9, 181, 185, 74, 49, 66, 126, 206, 84, 214, 237, 199, 220, 50, 165, 197, 238, 9, 160, 28, 40, 200, 13, 235, 227, 26, 226, 28, 242, 143, 28, 169, 194, 149, 218, 67, 212, 197, 168, 68, 237, 51, 222, 18, 121, 208, 133, 69, 131, 110, 62, 4, 149, 232, 180, 151, 149, 173, 113, 117, 20, 200, 83, 12, 35, 237, 12, 51, 162, 50, 186, 200, 251, 49, 240, 77, 13, 50, 222, 233, 76, 15, 240, 209, 73, 139, 64, 50, 8, 68, 91, 228, 55, 144, 111, 239, 177, 57, 175, 63, 203, 171, 187, 151, 152, 156, 208, 229, 109, 122, 208, 149, 61, 145, 175, 188, 114, 89, 148 } });
        }
    }
}
